{\rtf1\ansi\ansicpg1251\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red79\green123\blue61;\red23\green23\blue23;\red202\green202\blue202;
\red70\green137\blue204;\red194\green126\blue101;\red212\green212\blue212;\red167\green197\blue152;\red202\green202\blue202;
}
{\*\expandedcolortbl;;\cssrgb\c37647\c54510\c30588;\cssrgb\c11765\c11765\c11765;\cssrgb\c83137\c83137\c83137;
\cssrgb\c33725\c61176\c83922;\cssrgb\c80784\c56863\c47059;\cssrgb\c86275\c86275\c86275;\cssrgb\c70980\c80784\c65882;\cssrgb\c83137\c83137\c83137;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl420\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // Sample code to perform I/O:\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 #include\cf4 \strokec4  \cf5 \strokec5 <\cf6 \strokec6 stdio.h\cf5 \strokec5 >\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 void\cf4 \strokec4  casetypefunc\cf7 \strokec7 ();\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 void\cf4 \strokec4  clockwisefunc\cf7 \strokec7 (\cf5 \strokec5 int\cf4 \strokec4  N\cf7 \strokec7 ,\cf5 \strokec5 int\cf4 \strokec4  K\cf7 \strokec7 ,\cf5 \strokec5 int\cf4 \strokec4  \cf7 \strokec7 *\cf4 \strokec4 A\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 void\cf4 \strokec4  printarr\cf7 \strokec7 (\cf5 \strokec5 int\cf4 \strokec4  N\cf7 \strokec7 ,\cf5 \strokec5 int\cf4 \strokec4  \cf7 \strokec7 *\cf4 \strokec4 A\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 int\cf4 \strokec4  main\cf7 \strokec7 ()\{\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\cf5 \strokec5 int\cf4 \strokec4  num\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\
\cb3 \'a0\'a0\'a0\'a0scanf\cf7 \strokec7 (\cf6 \strokec6 "%d"\cf7 \strokec7 ,\cf4 \strokec4  \cf7 \strokec7 &\cf4 \strokec4 num\cf7 \strokec7 );\cf4 \strokec4               \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 // Reading input from STDIN\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\cf5 \strokec5 for\cf7 \strokec7 (\cf5 \strokec5 int\cf4 \strokec4  i \cf7 \strokec7 =\cf4 \strokec4  \cf8 \strokec8 0\cf7 \strokec7 ;\cf4 \strokec4  i \cf7 \strokec7 <\cf4 \strokec4  num\cf7 \strokec7 ;\cf4 \strokec4  i\cf7 \strokec7 ++)\{\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0casetypefunc\cf7 \strokec7 ();\cf4 \strokec4 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 //iterating test cases\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\cb1 \
\cb3 \'a0\'a0\'a0\'a0\cf2 \strokec2 //printf("Input number is %d.\\n", num);       // Writing output to STDOUT\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 \}\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 void\cf4 \strokec4  casetypefunc\cf7 \strokec7 ()\{\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\cf5 \strokec5 int\cf4 \strokec4  N\cf7 \strokec7 ,\cf4 \strokec4 K\cf7 \strokec7 ;\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0scanf\cf7 \strokec7 (\cf6 \strokec6 "%d"\cf7 \strokec7 ,\cf4 \strokec4  \cf7 \strokec7 &\cf4 \strokec4 N\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0scanf\cf7 \strokec7 (\cf6 \strokec6 "%d"\cf7 \strokec7 ,\cf4 \strokec4  \cf7 \strokec7 &\cf4 \strokec4 K\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\cf2 \strokec2 //printf("N and K are %d and %d", N, K);\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0K \cf7 \strokec7 =\cf4 \strokec4  K \cf7 \strokec7 %\cf4 \strokec4  N\cf7 \strokec7 ;\cf4 \strokec4 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 //cut full laps\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\cf2 \strokec2 //printf("New K is %d\\n", K);\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\cf5 \strokec5 int\cf4 \strokec4  \cf7 \strokec7 *\cf4 \strokec4 A \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf5 \strokec5 int\cf7 \strokec7 [\cf4 \strokec4 N\cf7 \strokec7 ];\cf4 \strokec4 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 //dynamic array of N element\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\cf5 \strokec5 for\cf7 \strokec7 (\cf5 \strokec5 int\cf4 \strokec4  i \cf7 \strokec7 =\cf4 \strokec4  \cf8 \strokec8 0\cf7 \strokec7 ;\cf4 \strokec4  i \cf7 \strokec7 <\cf4 \strokec4  N\cf7 \strokec7 ;\cf4 \strokec4  i\cf7 \strokec7 ++)\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0scanf\cf7 \strokec7 (\cf6 \strokec6 "%d"\cf7 \strokec7 ,\cf4 \strokec4  \cf7 \strokec7 &\cf4 \strokec4 A\cf7 \strokec7 [\cf4 \strokec4 i\cf7 \strokec7 ]);\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0clockwisefunc\cf7 \strokec7 (\cf4 \strokec4 N\cf7 \strokec7 ,\cf4 \strokec4 K\cf7 \strokec7 ,\cf4 \strokec4 A\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\cf5 \strokec5 delete\cf7 \strokec7 []\cf4 \strokec4 A\cf7 \strokec7 ;\cf4 \strokec4 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 //clean dynamic memory\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 \}\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 void\cf4 \strokec4  clockwisefunc\cf7 \strokec7 (\cf5 \strokec5 int\cf4 \strokec4  N\cf7 \strokec7 ,\cf5 \strokec5 int\cf4 \strokec4  K\cf7 \strokec7 ,\cf5 \strokec5 int\cf4 \strokec4  \cf7 \strokec7 *\cf4 \strokec4 A\cf7 \strokec7 )\{\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\cf5 \strokec5 int\cf4 \strokec4  \cf7 \strokec7 *\cf4 \strokec4 temp \cf7 \strokec7 =\cf4 \strokec4  \cf5 \strokec5 new\cf4 \strokec4  \cf5 \strokec5 int\cf7 \strokec7 [\cf4 \strokec4 K\cf7 \strokec7 ];\cf4 \strokec4 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 //array for last K el. of A\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\cf5 \strokec5 for\cf7 \strokec7 (\cf5 \strokec5 int\cf4 \strokec4  i \cf7 \strokec7 =\cf4 \strokec4  \cf8 \strokec8 0\cf7 \strokec7 ;\cf4 \strokec4  i \cf7 \strokec7 <\cf4 \strokec4  K\cf7 \strokec7 ;\cf4 \strokec4  i\cf7 \strokec7 ++)\{\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0temp\cf7 \strokec7 [\cf4 \strokec4 i\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  A\cf7 \strokec7 [\cf4 \strokec4 N\cf7 \strokec7 -\cf4 \strokec4 K\cf7 \strokec7 +\cf4 \strokec4 i\cf7 \strokec7 ];\cf4 \strokec4 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 //copy last K el. to temp\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 //printf("Temp %d\\n", temp[i]);\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\cf5 \strokec5 for\cf7 \strokec7 (\cf5 \strokec5 int\cf4 \strokec4  i \cf7 \strokec7 =\cf4 \strokec4  \cf8 \strokec8 0\cf7 \strokec7 ;\cf4 \strokec4  i \cf7 \strokec7 <\cf4 \strokec4  N\cf7 \strokec7 -\cf4 \strokec4 K\cf7 \strokec7 ;\cf4 \strokec4  i\cf7 \strokec7 ++)\{\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0A\cf7 \strokec7 [\cf4 \strokec4 N\cf7 \strokec7 -\cf8 \strokec8 1\cf7 \strokec7 -\cf4 \strokec4 i\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  A\cf7 \strokec7 [\cf4 \strokec4 N\cf7 \strokec7 -\cf8 \strokec8 1\cf7 \strokec7 -\cf4 \strokec4 K\cf7 \strokec7 -\cf4 \strokec4 i\cf7 \strokec7 ];\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\cf5 \strokec5 for\cf7 \strokec7 (\cf5 \strokec5 int\cf4 \strokec4  i \cf7 \strokec7 =\cf4 \strokec4  \cf8 \strokec8 0\cf7 \strokec7 ;\cf4 \strokec4  i \cf7 \strokec7 <\cf4 \strokec4  K\cf7 \strokec7 ;\cf4 \strokec4  i\cf7 \strokec7 ++)\{\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0A\cf7 \strokec7 [\cf4 \strokec4 i\cf7 \strokec7 ]\cf4 \strokec4  \cf7 \strokec7 =\cf4 \strokec4  temp\cf7 \strokec7 [\cf4 \strokec4 i\cf7 \strokec7 ];\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\cf5 \strokec5 delete\cf7 \strokec7 []\cf4 \strokec4 temp\cf7 \strokec7 ;\cf4 \strokec4 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0\cf2 \strokec2 //clean dynamic memory\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0printarr\cf7 \strokec7 (\cf4 \strokec4 N\cf7 \strokec7 ,\cf4 \strokec4 A\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 \}\cf4 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 void\cf4 \strokec4  printarr\cf7 \strokec7 (\cf5 \strokec5 int\cf4 \strokec4  N\cf7 \strokec7 ,\cf5 \strokec5 int\cf4 \strokec4  \cf7 \strokec7 *\cf4 \strokec4 A\cf7 \strokec7 )\{\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\cf5 \strokec5 for\cf7 \strokec7 (\cf5 \strokec5 int\cf4 \strokec4  i \cf7 \strokec7 =\cf4 \strokec4  \cf8 \strokec8 0\cf7 \strokec7 ;\cf4 \strokec4  i \cf7 \strokec7 <\cf4 \strokec4  N\cf7 \strokec7 ;\cf4 \strokec4  i\cf7 \strokec7 ++)\{\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\'a0\'a0\'a0\'a0printf\cf7 \strokec7 (\cf6 \strokec6 "%d "\cf7 \strokec7 ,\cf4 \strokec4  A\cf7 \strokec7 [\cf4 \strokec4 i\cf7 \strokec7 ]);\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0\cf7 \strokec7 \}\cf4 \cb1 \strokec4 \
\cb3 \'a0\'a0\'a0\'a0printf\cf7 \strokec7 (\cf6 \strokec6 "\\n"\cf7 \strokec7 );\cf4 \cb1 \strokec4 \
\cf7 \cb3 \strokec7 \}\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2 // Warning: Printing unwanted or ill-formatted data to output will cause the test cases to fail\cf4 \cb1 \strokec4 \
\
\
\cf2 \cb3 \strokec2 // Write your code here\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\sl420\partightenfactor0
\cf9 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\
}